var y=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var x=Object.prototype.hasOwnProperty;var A=e=>y(e,"__esModule",{value:!0});var W=(e,t)=>{for(var r in t)y(e,r,{get:t[r],enumerable:!0})},M=(e,t,r,_)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of k(t))!x.call(e,a)&&(r||a!=="default")&&y(e,a,{get:()=>t[a],enumerable:!(_=h(t,a))||_.enumerable});return e};var R=(e=>(t,r)=>e&&e.get(t)||(r=M(A({}),t,1),e&&e.set(t,r),r))(typeof WeakMap!="undefined"?new WeakMap:0);var O={};W(O,{default:()=>C,emoji:()=>q,flip:()=>T,fw:()=>z,nozws:()=>U,plugin:()=>S,small:()=>L,smaller:()=>F,zwsit:()=>E});const B={};let n,b=null;function o(){return(b===null||b.buffer!==n.memory.buffer)&&(b=new Int32Array(n.memory.buffer)),b}let m=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});m.decode();let u=null;function g(){return(u===null||u.buffer!==n.memory.buffer)&&(u=new Uint8Array(n.memory.buffer)),u}function d(e,t){return m.decode(g().subarray(e,e+t))}function S(){try{const r=n.__wbindgen_add_to_stack_pointer(-16);n.plugin(r);var e=o()[r/4+0],t=o()[r/4+1];return d(e,t)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(e,t)}}let l=0,p=new TextEncoder("utf-8");const I=typeof p.encodeInto=="function"?function(e,t){return p.encodeInto(e,t)}:function(e,t){const r=p.encode(e);return t.set(r),{read:e.length,written:r.length}};function f(e,t,r){if(r===void 0){const c=p.encode(e),w=t(c.length);return g().subarray(w,w+c.length).set(c),l=c.length,w}let _=e.length,a=t(_);const i=g();let s=0;for(;s<_;s++){const c=e.charCodeAt(s);if(c>127)break;i[a+s]=c}if(s!==_){s!==0&&(e=e.slice(s)),a=r(a,_,_=s+e.length*3);const c=g().subarray(a+s,a+_);s+=I(e,c).written}return l=s,a}function T(e){try{const i=n.__wbindgen_add_to_stack_pointer(-16);var t=f(e,n.__wbindgen_malloc,n.__wbindgen_realloc),r=l;n.flip(i,t,r);var _=o()[i/4+0],a=o()[i/4+1];return d(_,a)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(_,a)}}function U(e){try{const i=n.__wbindgen_add_to_stack_pointer(-16);var t=f(e,n.__wbindgen_malloc,n.__wbindgen_realloc),r=l;n.nozws(i,t,r);var _=o()[i/4+0],a=o()[i/4+1];return d(_,a)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(_,a)}}function E(e){try{const i=n.__wbindgen_add_to_stack_pointer(-16);var t=f(e,n.__wbindgen_malloc,n.__wbindgen_realloc),r=l;n.zwsit(i,t,r);var _=o()[i/4+0],a=o()[i/4+1];return d(_,a)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(_,a)}}function q(e){try{const i=n.__wbindgen_add_to_stack_pointer(-16);var t=f(e,n.__wbindgen_malloc,n.__wbindgen_realloc),r=l;n.emoji(i,t,r);var _=o()[i/4+0],a=o()[i/4+1];return d(_,a)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(_,a)}}function z(e){try{const i=n.__wbindgen_add_to_stack_pointer(-16);var t=f(e,n.__wbindgen_malloc,n.__wbindgen_realloc),r=l;n.fw(i,t,r);var _=o()[i/4+0],a=o()[i/4+1];return d(_,a)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(_,a)}}function F(e){try{const i=n.__wbindgen_add_to_stack_pointer(-16);var t=f(e,n.__wbindgen_malloc,n.__wbindgen_realloc),r=l;n.smaller(i,t,r);var _=o()[i/4+0],a=o()[i/4+1];return d(_,a)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(_,a)}}function L(e){try{const i=n.__wbindgen_add_to_stack_pointer(-16);var t=f(e,n.__wbindgen_malloc,n.__wbindgen_realloc),r=l;n.small(i,t,r);var _=o()[i/4+0],a=o()[i/4+1];return d(_,a)}finally{n.__wbindgen_add_to_stack_pointer(16),n.__wbindgen_free(_,a)}}async function j(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(_){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",_);else throw _}const r=await e.arrayBuffer();return await WebAssembly.instantiate(r,t)}else{const r=await WebAssembly.instantiate(e,t);return r instanceof WebAssembly.Instance?{instance:r,module:e}:r}}async function v(e){typeof e=="undefined"&&(e=new URL("plugin_bg.wasm",B.url));const t={};(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=require("fs").readFileSync(require("path").join(__dirname,"plugin.wasm")));const{instance:r,module:_}=await j(await e,t);return n=r.exports,v.__wbindgen_wasm_module=_,n}var C=v;module.exports=R(O);0&&(module.exports={emoji,flip,fw,nozws,plugin,small,smaller,zwsit});
